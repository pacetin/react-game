{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","pages/RulesPage.tsx","pages/HighScorePage.tsx","components/Settings.tsx","pages/SettingsPage.tsx","components/Card.tsx","data/categories.ts","components/Field.tsx","components/Statistic.tsx","components/Timer.tsx","modals/SaveGameResult.tsx","pages/GamePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","to","Footer","target","rel","src","process","alt","RulesPage","HighScorePage","score","map","item","index","trials","size","Settings","addSettings","useState","checkBoxValue","setCheckBoxValue","selectSizeValue","setSelectSizeValue","selectCategoryValue","setSelectCategoryValue","rangeSoundValue","setRangeSoundValue","rangeMusicValue","setRangeMusicValue","history","useHistory","buttonRef","useRef","useEffect","keyDownHandler","e","key","ctrlKey","preventDefault","current","click","document","addEventListener","removeEventListener","selectChangeHandler","event","id","value","rangeChangeHandler","onChange","htmlFor","type","checked","min","max","ref","name","onClick","localStorage","removeItem","push","category","isPreShow","isSounds","isMusic","SettingsPage","Card","card","classes","isFlipped","isActive","join","bind","toString","categories","soundPath","wins","generateCards","array","slice","Number","sort","Math","random","shuffleArray","concat","elem","Field","props","changeStatistic","showWinModal","initialStatistic","JSON","parse","getItem","statistic","cards","setCards","firstCard","setFirstCard","secondCard","setSecondCard","onSuccess","onFailure","audio","Audio","load","muted","play","volume","loop","pause","flipCards","prev","timerId","setTimeout","clearTimeout","gameState","setItem","stringify","playAudio","url","inactivateCards","onWin","resetCards","clickHandler","Statistic","addZero","n","getSec","timeInterval","Timer","timer","seconds","setSeconds","interval","setInterval","clearInterval","floor","SaveGameResult","isOpen","Fragment","GamePage","initialCards","initialTimer","setStatistic","modalIsOpen","setModalOpen","closeWinModal","saveScore","App","initialSettings","settings","setScore","setSettings","savedScore","shiftKey","documentElement","requestFullscreen","obj","length","a","b","pop","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dce020aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue accent-2 px1\">\r\n        <a href=\"/\" className=\"brand-logo left\">\r\n          MEMORY\r\n        </a>\r\n        <ul className=\"right\">\r\n          <li>\r\n            <NavLink to=\"/\">Settings</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/rules\">Rules</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/highscore\">Highscore</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst logoPath = process.env.PUBLIC_URL + '/assets/icons/rs_school_logo.svg';\r\n\r\nexport const Footer: React.FC = () => {\r\n  return (\r\n    <footer className=\"page-footer blue accent-2\">      \r\n      <div className=\"logo\">\r\n        <a href=\"https://rs.school/js/\" target=\"_blank\" rel=\"noreferrer\">\r\n          <img src={logoPath} alt=\"logo\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"author\">\r\n        <span>Created by:</span>\r\n        <a href=\"https://github.com/rolling-scopes-school/pacetin-JS2020Q3\" target=\"_blank\" rel=\"noreferrer\">\r\n          Palina Cetin\r\n        </a>\r\n        <span>, 2020</span>\r\n      </div>            \r\n    </footer>\r\n  );\r\n};","import React from \"react\";\r\nimport '../styles/RulesPage.css';\r\n\r\nexport const RulesPage: React.FC = () => {\r\n  return (\r\n    <div className=\"rules-container\">\r\n      <h3>Rules</h3>\r\n      <ul>              \r\n        <li>The objective is to collect all pairs of cards.</li>\r\n        <li>On each turn, a player turns over any two cards and get points if the cards match (for instance, two kings)</li>\r\n        <li>When a player turns over two cards that do not match, those cards are turned face down again.</li>\r\n        <li>The trick is to remember which cards are where.</li>\r\n      </ul>\r\n      <h3>Hotkeys</h3>\r\n      <ul>              \r\n        <li><strong>Ctrl + Z</strong> - go to Settings from Game page</li>\r\n        <li><strong>Ctrl + C</strong> - go to Highscore from Game page</li>\r\n        <li><strong>Ctrl + V</strong> - go to Rules from Game page</li>\r\n        <li><strong>Ctrl + Enter</strong> - start new game</li>                \r\n        <li><strong>Shift + Enter</strong> - fullscreen mode</li>                \r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { IScore } from \"../interfaces\";\r\nimport '../styles/HighScorePage.css'\r\n\r\ntype HighScoreProps = {\r\n  score: IScore[],\r\n};\r\n\r\nexport const HighScorePage: React.FC<HighScoreProps> = ({ score }) => {\r\n  return (\r\n    <div className=\"score-container\">\r\n      <h3>Highscore</h3>\r\n      <table className=\"score-table\">\r\n        <tbody>        \r\n          <tr><th>Rank</th><th>Trials</th><th>Size</th></tr>\r\n          {score.map((item, index) => {\r\n            return (\r\n              <tr key={index}><th>{index + 1}</th><th>{item.trials}</th><th>{item.size}</th></tr>\r\n            )\r\n          })}\r\n        </tbody>                         \r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IFieldProps, ISettingsProps } from \"../interfaces\";\r\n\r\nconst Settings: React.FC<ISettingsProps> = ({ addSettings }) => {\r\n  const [checkBoxValue, setCheckBoxValue] = useState<boolean>(false);\r\n  const [selectSizeValue, setSelectSizeValue] = useState<string>('24');\r\n  const [selectCategoryValue, setSelectCategoryValue] = useState<string>('nations');\r\n  const [rangeSoundValue, setRangeSoundValue] = useState<string>('50');\r\n  const [rangeMusicValue, setRangeMusicValue] = useState<string>('50');\r\n  const history = useHistory();\r\n  const buttonRef = useRef<HTMLButtonElement>(null);\r\n\r\n  useEffect(() => {\r\n    function keyDownHandler(e: KeyboardEvent): void {\r\n      if ((e.key === 'Enter') && e.ctrlKey) {\r\n        e.preventDefault();\r\n        buttonRef.current!.click();\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', keyDownHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', keyDownHandler)\r\n    }\r\n  });\r\n\r\n  const clickHandler = (event: React.MouseEvent): void => {\r\n    event.preventDefault();\r\n    localStorage.removeItem('GameState');\r\n    history.push('/game');\r\n    const settingsObj: IFieldProps = {\r\n      size: selectSizeValue,\r\n      category: selectCategoryValue,\r\n      isPreShow: checkBoxValue,\r\n      isSounds: rangeSoundValue,\r\n      isMusic: rangeMusicValue,\r\n    }\r\n  \r\n    addSettings(settingsObj);\r\n  };\r\n\r\n  const flipChangeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setCheckBoxValue(event.target.checked);\r\n  };\r\n\r\n  const selectChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    (event.target.id === 'size') ? setSelectSizeValue(event.target.value) : setSelectCategoryValue(event.target.value);    \r\n  };\r\n\r\n  const rangeChangeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    (event.target.id === 'sounds') ? setRangeSoundValue(event.target.value) : setRangeMusicValue(event.target.value);\r\n  };\r\n\r\n  return (    \r\n    <div className=\"settings\">\r\n      <h3>Settings</h3>\r\n      <form>\r\n        <label>Field size</label>\r\n        <select className=\"browser-default\" id='size' value={selectSizeValue} onChange={selectChangeHandler}>     \r\n          <option value=\"18\">18 cards</option>\r\n          <option value=\"24\">24 cards</option>\r\n          <option value=\"30\">30 cards</option>\r\n        </select>\r\n\r\n        <label>Categories</label>\r\n        <select className=\"browser-default\" id=\"category\" value={selectCategoryValue} onChange={selectChangeHandler}>   \r\n          <option value=\"nations\">Nations</option>\r\n          <option value=\"animals\">Animals</option>\r\n          <option value=\"faces\">Faces</option>\r\n        </select>\r\n\r\n        <p>\r\n          <label htmlFor=\"flip\" className=\"active\">\r\n            <input id=\"flip\" type=\"checkbox\" checked={checkBoxValue} onChange={flipChangeHandler} />\r\n            <span>Flip cards before playing</span>\r\n          </label>\r\n        </p>\r\n        <p className=\"range-field\">\r\n          <i className=\"material-icons\">music_note</i>\r\n          <label>Sounds</label>        \r\n          <input type=\"range\" id=\"sounds\" min=\"0\" max=\"100\" value={rangeSoundValue} onChange={rangeChangeHandler} />\r\n        </p>\r\n        <p className=\"range-field\">\r\n          <i className=\"material-icons\">volume_up</i>\r\n          <label>Music</label>\r\n          <input type=\"range\" id=\"music\" min=\"0\" max=\"100\" value={rangeMusicValue} onChange={rangeChangeHandler} />\r\n        </p>\r\n        <button ref={buttonRef} className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\" onClick={clickHandler}>\r\n          Start new game\r\n          <i className=\"material-icons right\">play_circle_outline</i>\r\n        </button>\r\n      </form>   \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport \"../styles/SettingsPage.css\";\r\nimport Settings from \"../components/Settings\";\r\nimport { ISettingsProps } from \"../interfaces\";\r\n\r\nexport const SettingsPage: React.FC<ISettingsProps> = ({ addSettings }) => {  \r\n  return (    \r\n    <Settings addSettings={addSettings}/>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ICard } from \"../interfaces\";\r\n\r\n\r\n\r\ntype CardProps = {\r\n  card: ICard;\r\n  onClick(card:ICard): void;\r\n  // onToggle(id:number): void;\r\n  // onRemove: (id:number) => void;\r\n};\r\n\r\nconst Card: React.FC<CardProps> = ({ card, onClick }) => {\r\n  const classes = ['playing-card'];\r\n  if (card.isFlipped) {\r\n    classes.push('flipped');\r\n  }\r\n  if (!card.isActive) {\r\n    classes.push('inactive');\r\n  }\r\n  return (    \r\n    <li className={classes.join(' ')}>\r\n      <div className={'back'} onClick={onClick.bind(null, card)}></div>\r\n      <div className={'front'}>        \r\n        <img src={card.src} alt={card.id.toString()} />          \r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","interface ICategories {\r\n  [key: string]: string[]\r\n}\r\n\r\nconst categories:ICategories =  {\r\n  'nations': [\r\n    'nations1',\r\n    'nations2',\r\n    'nations3',\r\n    'nations4',\r\n    'nations5',\r\n    'nations6',\r\n    'nations7',\r\n    'nations8',\r\n    'nations9',\r\n    'nations10',\r\n    'nations11',\r\n    'nations12',\r\n    'nations13',\r\n    'nations14',\r\n    'nations15',\r\n  ],\r\n  \r\n  'faces': [\r\n    'faces1',\r\n    'faces2',\r\n    'faces3',\r\n    'faces4',\r\n    'faces5',\r\n    'faces6',\r\n    'faces7',\r\n    'faces8',\r\n    'faces9',\r\n    'faces10',\r\n    'faces11',\r\n    'faces12',\r\n    'faces13',\r\n    'faces14',\r\n    'faces15',  \r\n  ], \r\n  \r\n  'animals': [\r\n    'animals1',\r\n    'animals2',\r\n    'animals3',\r\n    'animals4',\r\n    'animals5',\r\n    'animals6',\r\n    'animals7',\r\n    'animals8',\r\n    'animals9',\r\n    'animals10',\r\n    'animals11',\r\n    'animals12',\r\n    'animals13',\r\n    'animals14',\r\n    'animals15',  \r\n  ], \r\n}\r\n\r\nexport default categories;","import React, { useEffect, useState }  from \"react\";\r\nimport Card from \"./Card\";\r\nimport categories from \"../data/categories\";\r\nimport { ICard, IFieldProps } from \"../interfaces\";\r\n\r\nconst imagePath = process.env.PUBLIC_URL + '/assets/images/';\r\nconst soundPath = process.env.PUBLIC_URL + '/assets/sounds/';\r\n\r\nlet wins = 0;\r\nlet trials = 0;\r\n\r\nconst shuffleArray = (array:any[]): any[] => array.sort(() => .5 - Math.random());\r\n\r\nconst generateCards = (size:string, category:string):ICard[] => {\r\n  const array = categories[category].slice(0, (Number(size) / 2));\r\n  const doubledArray = array.concat(array);\r\n  const shuffledArray = shuffleArray(doubledArray);  \r\n  return shuffledArray.map((elem, index) => {\r\n    return {\r\n      src: `${imagePath}${elem}.jpg`,\r\n      name: elem,\r\n      id: index,\r\n      isFlipped: false,\r\n      isActive: true,\r\n    }\r\n  });  \r\n};\r\n\r\nconst Field: React.FC<IFieldProps> = (props) => {\r\n  const { size, category, isPreShow, isSounds, isMusic, changeStatistic, showWinModal } = props;\r\n  \r\n  const { statistic: initialStatistic } = JSON.parse(localStorage.getItem('GameState') || '{}');\r\n  if (initialStatistic) {\r\n    wins = initialStatistic.wins;\r\n    trials = initialStatistic.trials;\r\n  }\r\n\r\n  const [cards, setCards] = useState<ICard[]>(() => { return props.cards || generateCards(size, category)});  \r\n  const [firstCard, setFirstCard] = useState<ICard | null>(null);\r\n  const [secondCard, setSecondCard] = useState<ICard | null>(null);  \r\n  \r\n  useEffect(() => {\r\n    if (!firstCard || !secondCard) return;\r\n\r\n    (firstCard.name === secondCard.name) ? onSuccess() : onFailure();\r\n    // eslint-disable-next-line\r\n  }, [firstCard, secondCard])\r\n\r\n  useEffect(() => {\r\n    if (isMusic === '0') return;\r\n\r\n    let audio = new Audio();\r\n    audio.src = `${soundPath}background.mp3`;\r\n    audio.load();\r\n    audio.muted = true;\r\n    audio.play();\r\n    audio.muted = false;\r\n    audio.play();\r\n    audio.volume = Number(isMusic) / 100;\r\n    audio.loop = true;\r\n\r\n    return () => {\r\n      audio.pause();\r\n    }\r\n  }, [isMusic])\r\n\r\n  useEffect(() => {\r\n    if (!isPreShow) return;\r\n\r\n    const flipCards = (): void => setCards(prev => prev.map(card => {      \r\n      return {\r\n        ...card,\r\n        isFlipped: !card.isFlipped\r\n      }; \r\n    }))\r\n\r\n    flipCards();\r\n    const timerId = setTimeout(flipCards, 5000);    \r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    }\r\n\r\n  }, [isPreShow]);\r\n\r\n  useEffect(() => {\r\n    const gameState = JSON.parse(localStorage.getItem('GameState') || '{}');\r\n    localStorage.setItem('GameState', JSON.stringify({\r\n      ...gameState,\r\n      cards: cards,\r\n    }));\r\n  }, [cards]);\r\n\r\n  const playAudio = (url: string):void => {\r\n    const audio = new Audio();\r\n    audio.src = `${soundPath}${url}`;\r\n    audio.volume = Number(isSounds) / 100;\r\n    audio.load();\r\n    audio.play();\r\n  };\r\n\r\n  const onSuccess = (): void => {    \r\n    if (isSounds !== '0') {\r\n      setTimeout(() => playAudio('correct.mp3'), 300);\r\n    }\r\n    wins += 1;\r\n    trials += 1;\r\n    setTimeout(() => { \r\n      changeStatistic!(wins, trials);\r\n    }, 300)\r\n\r\n    setTimeout(inactivateCards, 600);\r\n\r\n    if (wins === Number(size) / 2) {\r\n      onWin();  \r\n    }\r\n  };\r\n\r\n  const onFailure = (): void => {\r\n    if (isSounds !== '0') {\r\n      setTimeout(() => playAudio('error.mp3'), 300);\r\n    }\r\n    trials += 1;\r\n    setTimeout(() => {      \r\n      changeStatistic!(wins, trials);\r\n    }, 300)\r\n        \r\n    setTimeout(flipCards, 600);\r\n  };\r\n\r\n  const onWin = ():void => {\r\n    if (isSounds !== '0') {\r\n      setTimeout(() => playAudio('success.mp3'), 600);\r\n    }\r\n    setTimeout(() => {\r\n      showWinModal!();\r\n      wins = 0;\r\n      trials = 0;\r\n    }, 600);\r\n  }\r\n\r\n  const inactivateCards = (): void => {\r\n    setCards(prev => prev.map(card => {\r\n      if (card.id === firstCard!.id || card.id === secondCard!.id) {\r\n        return {\r\n          ...card,\r\n          isActive: !card.isActive\r\n        }\r\n      }\r\n      return card;\r\n    }))\r\n    resetCards();\r\n  }\r\n\r\n  const flipCards = (): void => {\r\n    setCards(prev => prev.map(card => {\r\n      if (card.id === firstCard!.id || card.id === secondCard!.id) {\r\n        return {\r\n          ...card,\r\n          isFlipped: !card.isFlipped\r\n        }\r\n      }\r\n      return card;\r\n    }))\r\n    resetCards();\r\n  }\r\n\r\n  const resetCards = (): void => {\r\n    setFirstCard(null);\r\n    setSecondCard(null);\r\n  }\r\n  \r\n  const clickHandler = (card: ICard): void => {\r\n    if (firstCard && secondCard) return;\r\n    firstCard ? setSecondCard(card) : setFirstCard(card);\r\n    setCards(prev => prev.map(item => {\r\n      if (item.id === card.id) {\r\n        return {\r\n          ...item,\r\n          isFlipped: !item.isFlipped\r\n        }\r\n      }\r\n      return item;\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      {cards.map (card => {\r\n        return (\r\n          <Card card={card} key={card.id} onClick={clickHandler} />\r\n        );  \r\n      })}\r\n    </div>\r\n  );    \r\n};\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\nimport { IStatisticProps } from \"../interfaces\";\r\n\r\nexport const Statistic: React.FC<IStatisticProps> = ({ wins, trials, size}) => {\r\n  return (\r\n    <>      \r\n      <div className=\"wins\">\r\n        <i className=\"material-icons small  teal-text text-lighten-1\">emoji_events</i>\r\n        <span>{`${wins}/${Number(size) / 2}`}</span>\r\n      </div>\r\n      <div className=\"trials\">\r\n        <i className=\"material-icons small  teal-text text-lighten-1\">cached</i>\r\n        <span>{trials}</span>\r\n      </div>    \r\n    </>    \r\n  );\r\n};\r\n\r\nexport default Statistic;","import React, { useState, useEffect } from 'react';\r\nimport { ITimerProps } from \"../interfaces\";\r\n\r\nconst addZero = (n: number): string => {\r\n  return (n < 10 ? '0' : '') + n.toString();\r\n}\r\n\r\nconst getMin = (timeInterval: number): number => {  \r\n  return Math.floor(timeInterval / 60);\r\n}\r\n\r\nconst getSec = (timeInterval: number): number => {\r\n  return timeInterval % 60;\r\n}\r\n\r\nconst Timer: React.FC<ITimerProps> = ({ timer }) => {\r\n  const [seconds, setSeconds] = useState(timer || 0);  \r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSeconds(prev => prev + 1);\r\n    }, 1000);\r\n  \r\n    return () => clearInterval(interval);\r\n  }, [seconds]);\r\n  \r\n  useEffect(() => {\r\n    const gameState = JSON.parse(localStorage.getItem('GameState') || '{}');\r\n    localStorage.setItem('GameState', JSON.stringify({\r\n      ...gameState,\r\n      timer: seconds,\r\n    }));\r\n  }, [seconds]);\r\n\r\n  return ( \r\n    <div className=\"timer\">\r\n      <i className=\"material-icons small  teal-text text-lighten-1\">timer</i>\r\n      <span>{addZero(getMin(seconds))} : {addZero(getSec(seconds))}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;","import React from \"react\";\r\nimport \"../styles/SaveGameResult.css\";\r\nimport { IModalProps } from \"../interfaces\";\r\n\r\nconst SaveGameResult: React.FC<IModalProps> = ({ isOpen, onClick, trials }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {isOpen && (\r\n        <div className=\"modal-window\">\r\n          <div className=\"modal-body\">\r\n            <h1>Congratulations!!!</h1>\r\n            <p>You could solve this complicated puzzle on<strong>{` ${trials} `}</strong>downs!</p>\r\n            <button className=\"waves-effect waves-light btn\" onClick={() => onClick(trials)}>Save</button>     \r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SaveGameResult;","import React, { useState, useEffect } from \"react\";\r\nimport '../styles/GamePage.css';\r\nimport Field from \"../components/Field\";\r\nimport Statistic from \"../components/Statistic\";\r\nimport Timer from \"../components/Timer\";\r\nimport { IFieldProps, IStatisticProps, } from \"../interfaces\";\r\nimport SaveGameResult from \"../modals/SaveGameResult\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const GamePage: React.FC<IFieldProps> = (props) => {\r\n  const { \r\n    statistic: initialStatistic,\r\n    cards: initialCards,\r\n    timer: initialTimer,    \r\n  } = JSON.parse(localStorage.getItem('GameState') || '{}');  \r\n  \r\n  const [statistic, setStatistic] = useState<IStatisticProps>(initialStatistic || {    \r\n    wins: 0,\r\n    trials: 0,\r\n    size: props.size,\r\n  });\r\n  const [modalIsOpen, setModalOpen] = useState<boolean>(false);\r\n  const history = useHistory(); \r\n\r\n  useEffect(() => {\r\n    const gameState = JSON.parse(localStorage.getItem('GameState') || '{}');\r\n    localStorage.setItem('GameState', JSON.stringify({\r\n      ...gameState,\r\n      statistic: statistic,\r\n    }));\r\n  }, [statistic]);\r\n\r\n  useEffect(() => {\r\n    function keyDownHandler(e: KeyboardEvent): void {    \r\n      if ((e.key === 'Z' || e.key === 'z') && e.ctrlKey) {\r\n        e.preventDefault();\r\n        history.push('/');\r\n      }\r\n\r\n      if ((e.key === 'C' || e.key === 'c') && e.ctrlKey) {\r\n        e.preventDefault();\r\n        history.push('/highscore');\r\n      }\r\n\r\n      if ((e.key === 'V' || e.key === 'v') && e.ctrlKey) {\r\n        e.preventDefault();\r\n        history.push('/rules');        \r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', keyDownHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', keyDownHandler)\r\n    }\r\n  });\r\n\r\n  const changeStatistic = (wins: number, trials: number): void => {\r\n    setStatistic(prev => {\r\n      return {\r\n      ...prev,\r\n      wins: wins,    \r\n      trials: trials,\r\n      }\r\n    });\r\n  }\r\n\r\n  const clickHandler = (trials: number) => {\r\n    closeWinModal();  \r\n    props.saveScore!(Number(props.size), trials);  \r\n    history.push('/');\r\n  }\r\n\r\n  const showWinModal = (): void => { \r\n    setModalOpen(prev => true);\r\n  }\r\n\r\n  const closeWinModal = (): void => {\r\n    setModalOpen(prev => false);    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SaveGameResult isOpen={modalIsOpen} onClick={clickHandler} trials={statistic.trials} />\r\n      <div className = \"statistic-container\">\r\n        <Timer timer={initialTimer} />\r\n        <Statistic {...statistic} size={props.size} />\r\n      </div>\r\n      <Field {...props} cards={initialCards} changeStatistic={changeStatistic} showWinModal={showWinModal} />\r\n    </>    \r\n  );\r\n};\r\n","import React, { useState, useEffect }  from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { Navbar } from \"./components/Header\";\nimport { Footer } from \"./components/Footer\";\nimport { RulesPage } from \"./pages/RulesPage\";\nimport { HighScorePage } from \"./pages/HighScorePage\";\nimport { SettingsPage } from './pages/SettingsPage';\nimport { GamePage } from './pages/GamePage';\nimport { IFieldProps, IScore } from './interfaces';\n\nfunction App() {\n  const { settings: initialSettings } = JSON.parse(localStorage.getItem('GameState') || '{}');\n\n  const [score, setScore] = useState<IScore[]>([]);  \n \n  const [settings, setSettings] = useState<IFieldProps>(initialSettings || {\n    size: '24',\n    category: 'nations',\n    isPreShow: false,\n    isSounds: '50',\n    isMusic: '50',\n  });\n   \n  useEffect(() => {\n    const savedScore = JSON.parse(localStorage.getItem('Score') || '[]') as IScore[];\n    setScore(savedScore);\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('Score', JSON.stringify(score));\n  }, [score]);\n  \n  useEffect(() => {\n    const gameState = JSON.parse(localStorage.getItem('GameState') || '{}');\n    localStorage.setItem('GameState', JSON.stringify({\n      ...gameState,\n      settings: settings,\n    }));\n  }, [settings]);\n\n  useEffect(() => {\n    function keyDownHandler(e: KeyboardEvent): void {\n      if ((e.key === 'Enter') && e.shiftKey) {\n        e.preventDefault();\n        document.documentElement.requestFullscreen();\n      }\n    }\n\n    document.addEventListener('keydown', keyDownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keyDownHandler)\n    }\n  });\n\n  const addSettings = (obj: IFieldProps): void => {\n    setSettings(obj);\n  };\n\n  const saveScore = (size: number, trials: number): void => {\n    const score = JSON.parse(localStorage.getItem('Score') || '[]') as IScore[];\n\n    if (score.length < 10) {              \n      score.push({size, trials});\n      score.sort( (a: IScore, b: IScore) => a.trials-b.trials);\n    } else if (score.length >= 10 && trials < score[score.length-1].trials) {\n      score.pop();            \n      score.push({size, trials});\n      score.sort( (a: IScore, b: IScore) => a.trials-b.trials);\n    }        \n\n    setScore(score);\n  }\n\n  return (\n    <HashRouter>\n      <Navbar />      \n      <main>\n        <Switch>       \n          <Route path=\"/\" component={() => <SettingsPage addSettings={addSettings} />} exact />\n          <Route component={RulesPage} path=\"/rules\" exact />          \n          <Route path=\"/game\" exact component={() => <GamePage {...settings} saveScore={saveScore} />} />          \n          <Route  path=\"/highscore\" component={() => <HighScorePage score={score} /> } exact />\n        </Switch>\n      </main>       \n      <Footer />      \n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}